 #!/usr/bin/env python

import telebot
from telebot.types import Message
from telebot import types
import config_level
import random
import keyActivators

TOKEN = '995249108:AAHv_znFEX_m9Z5Ggoo_M8AxhvxEoUuhsVE'
bot = telebot.TeleBot(TOKEN)
markup_inline_lvl = types.InlineKeyboardMarkup()
btn_light = types.InlineKeyboardButton('–ù–∞—á–∞–ª—å–Ω—ã–π', callback_data='Light')
btn_medium = types.InlineKeyboardButton('–°—Ä–µ–¥–Ω–∏–π', callback_data='Medium')
btn_hard = types.InlineKeyboardButton('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', callback_data='Hard')
markup_inline_lvl.add(btn_light, btn_medium, btn_hard)


markup_inline_next_light = types.InlineKeyboardMarkup()
markup_inline_next_medium = types.InlineKeyboardMarkup()
markup_inline_next_hard = types.InlineKeyboardMarkup()

btn_nextCard_light = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞', callback_data='Light')
btn_nextCard_medium = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞', callback_data='Medium')
btn_nextCard_hard = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞', callback_data='Hard')
btn_chooseCategory = types.InlineKeyboardButton('–ö –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='ChooseCategory')

markup_inline_next_light.add(btn_nextCard_light, btn_chooseCategory)
markup_inline_next_medium.add(btn_nextCard_medium, btn_chooseCategory)
markup_inline_next_hard.add(btn_nextCard_hard, btn_chooseCategory)


markup_inline_state = types.InlineKeyboardMarkup()
btn_hot = types.InlineKeyboardButton('–ë—ã–ª–æ –≥–æ—Ä—è—á–æ', callback_data='Hot')
btn_miss = types.InlineKeyboardButton('–ü–∞—Å—Å', callback_data='Miss')
markup_inline_state.add(btn_hot, btn_miss)

HashCodeActivate = "F6DE2FEA"
activatorDict = {}
@bot.message_handler(commands=['start', 'help'])
def command_handler(message):
	bot.send_message(message.chat.id,
					 """
					 –ü—Ä–∏–≤–µ—Ç, –∞–≥–µ–Ω—Ç—ã
–ù—É —á—Ç–æ, –≥–æ—Ç–æ–≤—ã –ø–æ–∏–≥—Ä–∞—Ç—å –∏ —Å—Ç–∞—Ç—å –µ—â–µ –±–ª–∏–∂–µ –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º?

–£ –º–µ–Ω—è –¥–ª—è –≤–∞—Å —Ç—Ä–∏ —É—Ä–æ–≤–Ω—è –≥—Ä–µ—Ö–æ–≤–Ω–æ—Å—Ç–∏ üî• 
–î–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã —Å–º–µ–ª—ã–µ –∏ —Å–º–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –¥–æ–π—Ç–∏ –¥–æ –∫–æ–Ω—Ü–∞?

–ß–µ—Ä—Ç—è—Ç–∞, –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã–µ - –Ø –æ—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–¥–∞–Ω–∏—è - –≤—ã –∏—Ö –∏—Å–ø–æ–ª–Ω—è–µ—Ç–µ.
					 """)

	if activatorDict.get(message.chat.id) == 1:
		bot.send_message(message.chat.id,'–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–∞—á–Ω–µ–º?', reply_markup = markup_inline_lvl)
	else:
		bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥ –ø–æ–∫—É–ø–∫–∏:')


@bot.message_handler(func=lambda message: True)
def echo_gigits(message):
	if message.text == 'F6DE2FEA':
		global activatorDict
		activatorDict[message.chat.id] = 1
		bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞!')
		bot.send_message(message.chat.id, '–° –∫–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–∞—á–Ω–µ–º?', reply_markup = markup_inline_lvl)
		if len(activatorDict) == 2:
			f = open('logUsers.txt', 'w')
			for index in activatorDict:
				f.write(str(index) + ':' + str(activatorDict[index]) + '\n')
			f.close()




@bot.callback_query_handler(func=lambda call:True)
def call_back_love(call):

	if call.data == 'Light':
		indexLvL = random.randint(0, (len(config_level.listPhotosLight) - 1))
		stringPhoto = config_level.listPhotosLight[indexLvL]
		photo = open('photos/light/{}'.format(stringPhoto), 'rb')
		bot.send_photo(call.message.chat.id, photo, reply_markup = markup_inline_next_light)

	elif call.data == 'Medium':
		indexLvL = random.randint(0, (len(config_level.listPhotosMedium) - 1))
		stringPhoto = config_level.listPhotosMedium[indexLvL]
		photo = open('photos/medium/{}'.format(stringPhoto), 'rb')
		bot.send_photo(call.message.chat.id, photo, reply_markup=markup_inline_next_medium)
	elif call.data == 'Hard':
		indexLvL = random.randint(0, (len(config_level.listPhotosHard) - 1))
		stringPhoto = config_level.listPhotosHard[indexLvL]
		photo = open('photos/hard/{}'.format(stringPhoto), 'rb')
		bot.send_photo(call.message.chat.id, photo, reply_markup=markup_inline_next_hard)
	elif call.data == 'Hot' or call.data == 'Miss':
		bot.send_message(call.message.chat.id, text='–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤, –º—ã —É—á—Ç—ë–º –µ–≥–æ!',
						 reply_markup = markup_inline_next_light)
	elif call.data == 'ChooseCategory':
		bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
						 reply_markup = markup_inline_lvl)

bot.polling(timeout=60)


